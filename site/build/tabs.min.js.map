{"version":3,"sources":["tabs.js"],"names":["each","el","cb","i","this","length","closest","newel","what","toUpperCase","parentNode","nodeName","Tablist","querySelectorAll","my","lis","ul","tabs","setAttribute","getAttribute","t","document","getElementById","c","e","preventDefault","name","tab","swapTab","newt","querySelector","substring","cur","new_target","which","cur_target","tmp","classList","remove","add","window"],"mappings":"cAIA,WAEC,GAAAA,GAAW,SAAAC,EAAAC,GAEV,IAAMF,GAAOG,GAAA,EAAAA,EAAPH,EAAgBC,SACc,IAA7BC,EAAIC,KAAKC,KAAMH,EAAGI,EAAAA,IADKF,OAQxBG,EAAU,SAAVA,EAAAA,GACJ,GAAIC,GAAQN,CACZO,GAAOA,EAAKC,aAEZ,IAKE,KAFAF,EAAKA,EAAOG,YAGb,YAGFH,EAAAI,WAAAH,EAGC,OAAQD,IAIJK,EAAQ,SAAQC,GAGpBb,GAAKc,GAAKC,IALVX,MAOIY,GAAKA,EANTZ,KAQIW,IAAMX,KAAMY,GAACX,qBAAQ,MAPzBD,KAAKa,KAQCb,KAAAY,GAAAH,iBAAA,gBALNb,EASKI,KAACc,IAAAA,SAAAA,EAAajB,GARjB,IASGA,EAAKkB,UAAAA,SAAa,UAAgB,CAEnC,GAAIC,GAAIC,EAAAA,iBAASC,eAEnB,KAAAC,IAAAA,EAAAlB,OACA,MAKEmB,GAAEC,EAAAA,GACFX,EAAEI,aAAa,iBAAc,GAC7BK,EAAAA,EAAAJ,aAAY,gBAEdE,UAAAC,eAAAC,GACHL,aAAA,eAAA,MAPClB,EAcEI,KAAOa,KAAKS,SAAAA,EAAMzB,GAblBA,EAcE0B,iBAAQ,QAAA,SAAAH,GAGV,MAFEA,GAAAC,iBACFX,EAAAc,QAAAxB,KAAAe,aAAA,mBACA,IAEF,KAXFP,GAgBQiB,UAAYb,aAAGc,SAAcJ,GAEnC,GAAIG,EAaJ,OAXA7B,GAAAI,KAAAa,KAAA,SAAAd,EAAAF,GAGE,GADYA,EAAEkB,aAAA,MAAAY,UAAA,KACHC,EAGT,MADFL,GAAQ1B,GACC,IAKLgC,GAjBRrB,EAqBMM,UAAYU,QAAC,SAAiBM,GAClCC,GAAAA,GAAWjB,KAAAA,GAAAA,cAAa,0BAElBZ,EAAOF,KAAKY,GAAEc,cAAK,kBAAAI,EAAA,IAEzBL,IAAkB,IAAdA,EAACX,OAALW,CAMD,GAAAG,EAAA3B,OAAA,CArBG,GAFW2B,EAAIb,aAAa,mBAEfe,EACX,OAAO,EAIX,GAAMC,GAAad,SAASS,cAAc,OAASE,EAAIb,aAAa,iBAAmB,KACjFc,EAAaZ,SAASS,cAAc,OAASD,EAAKV,aAAa,iBAAmB,KAEpFiB,EAAM9B,EAAQ0B,EAAK,KACvBI,GAAIC,UAAUC,OAAO,UACrBN,EAAId,aAAa,iBAAiB,GAClCiB,EAAWjB,aAAa,eAAe,GAEvCkB,EAAM9B,EAAQuB,EAAM,MACpBO,EAAIC,UAAUE,IAAI,UAClBV,EAAKX,aAAa,iBAAiB,GACnCe,EAAWf,aAAa,eAAe,KAGzCsB,OAAO5B,QAAUA","file":"tabs.min.js","sourcesContent":["/*\n  Author: Pontus Ã–stlund <https://github.com/poppa>\n*/\n\n// jshint esversion: 6\n\n(function() {\n\n  const each = function(el, cb) {\n    for (let i = 0; i < el.length; i++) {\n      if (cb.call(this, i, el[i]) === false) {\n        break;\n      }\n    }\n  };\n\n  const closest = function(el, what) {\n    let newel = el;\n    what = what.toUpperCase();\n\n    do {\n      newel = newel.parentNode;\n\n      if (!newel) {\n        break;\n      }\n    } while (newel.nodeName !== what);\n\n    return newel;\n  };\n\n  const Tablist = function(ul) {\n    const my = this;\n\n    this.ul = ul;\n    this.lis = this.ul.getElementsByTagName('li');\n    this.tabs = this.ul.querySelectorAll('[role=\"tab\"]');\n\n\n    each(this.lis, (i, el) => {\n      if (!el.classList.contains('active')) {\n        let c = el.querySelectorAll('[role=\"tab\"]');\n\n        if (!c || !c.length) {\n          return;\n        }\n\n        c = c[0];\n        c.setAttribute('aria-selected', false);\n        c = c.getAttribute('aria-controls');\n\n        let t = document.getElementById(c);\n        t.setAttribute('aria-hidden', true);\n      }\n    });\n\n\n    each(this.tabs, (i, el) => {\n      el.addEventListener('click', function(e) {\n        e.preventDefault();\n        my.swapTab(this.getAttribute('aria-controls'));\n        return false;\n      }, false);\n    });\n  };\n\n  Tablist.prototype.getTabByName = function (name) {\n    let tab;\n\n    each(this.tabs, (i, el) => {\n      const tid = el.getAttribute('id').substring(4);\n      if (tid === name) {\n        tab = el;\n        return false;\n      }\n    });\n\n    return tab;\n  };\n\n  Tablist.prototype.swapTab = function(which) {\n    const cur = this.ul.querySelector('[aria-selected=\"true\"]');\n    const newt = this.ul.querySelector('[aria-controls=' + which + ']');\n\n    if (newt.length === 0) {\n      return;\n    }\n\n    if (cur.length) {\n      let curb = cur.getAttribute('aria-controls');\n\n      if (curb === which) {\n        return false;\n      }\n    }\n\n    const cur_target = document.querySelector('[id=' + cur.getAttribute('aria-controls') + ']');\n    const new_target = document.querySelector('[id=' + newt.getAttribute('aria-controls') + ']');\n\n    let tmp = closest(cur, 'li');\n    tmp.classList.remove('active');\n    cur.setAttribute('aria-selected', false);\n    cur_target.setAttribute('aria-hidden', true);\n\n    tmp = closest(newt, 'li');\n    tmp.classList.add('active');\n    newt.setAttribute('aria-selected', true);\n    new_target.setAttribute('aria-hidden', false);\n  };\n\n  window.Tablist = Tablist;\n\n}());\n"]}